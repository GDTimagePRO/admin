@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
             var selectedItem = $(this).val();
             var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
     });
    </script>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="page registration-page">
        <div class="page-title">
            <h1>@T("Account.Register")</h1>
        </div>
        <div class="page-body">
            <div class="message-error">
                @Html.ValidationSummary(true)
            </div>
            @Html.Partial("_ExternalAuthentication.AssociateMessage")
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.YourPersonalDetails")</th>
							</tr>
								@if (Model.GenderEnabled)
								{
							<tr>
								<td class="lbl">@T("Account.Fields.Gender"):</td>
								<td>
											@Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
											<span class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</span>
											@Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
											<span class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</span>
								</td>
							</tr>
								}
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.FirstName, new { }, ":")</td>
								<td>
									@Html.EditorFor(model => model.FirstName)
									@Html.RequiredHint()
									@Html.ValidationMessageFor(model => model.FirstName)
								</td>
							</tr>
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.LastName, new { }, ":")</td>
								<td>
									@Html.EditorFor(model => model.LastName)
									@Html.RequiredHint()
									@Html.ValidationMessageFor(model => model.LastName)
								</td>
							</tr>
								@if (Model.DateOfBirthEnabled)
								{
							<tr>
								<td class="lbl">@T("Account.Fields.DateOfBirth"):</td>
								<td>
										@Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
											Html.FieldNameFor(x => x.DateOfBirthMonth),
											Html.FieldNameFor(x => x.DateOfBirthYear),
											DateTime.Now.Year - 110,
											DateTime.Now.Year,
											Model.DateOfBirthDay,
											Model.DateOfBirthMonth,
											Model.DateOfBirthYear)
										@Html.ValidationMessageFor(model => model.DateOfBirthDay)
										@Html.ValidationMessageFor(model => model.DateOfBirthMonth)
										@Html.ValidationMessageFor(model => model.DateOfBirthYear)
								</td>
							</tr>
								}
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Email, new { }, ":")</td>
								<td>
									@Html.EditorFor(model => model.Email)
									@Html.RequiredHint()
									@Html.ValidationMessageFor(model => model.Email)
								</td>
							</tr>
								@if (Model.UsernamesEnabled)
								{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Username, new { }, ":")</td>
								<td>
										@Html.EditorFor(model => model.Username)
										@Html.RequiredHint()
										@Html.ValidationMessageFor(model => model.Username)
										@if (Model.CheckUsernameAvailabilityEnabled)
										{
											@Html.Partial("_CheckUsernameAvailability")
										}
								</td>
							</tr>
								}
						</table>
					</td>
				</tr>
            </table>
            @if (Model.CompanyEnabled || Model.DisplayVatNumber)
            {
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.CompanyDetails")</th>
							</tr>
									@if (Model.CompanyEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Company, new { }, ":")</td>
								<td>
											@Html.EditorFor(model => model.Company)
											@if (Model.CompanyRequired)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.Company)
								</td>
							</tr>
									}
									@if (Model.DisplayVatNumber)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.VatNumber, new { }, ":")</td>
								<td>
											@Html.EditorFor(model => model.VatNumber)&nbsp;&nbsp;&nbsp;@Model.VatNumberStatusNote
											<span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
								</td>
							</tr>
									}
						</table>
					</td>
				</tr>
            </table>
            }
            @if (Model.StreetAddressEnabled || Model.StreetAddress2Enabled || Model.ZipPostalCodeEnabled
            || Model.CityEnabled || Model.CountryEnabled)
            {
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.YourAddress")</th>
							</tr>
									@if (Model.StreetAddressEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.StreetAddress, new { }, ":")</td>
								<td>
										@Html.EditorFor(model => model.StreetAddress)
											@if (Model.StreetAddressRequired)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.StreetAddress)
								</td>
							</tr>
									}
									@if (Model.StreetAddress2Enabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.StreetAddress2, new { }, ":")</td>
								<td>
										@Html.EditorFor(model => model.StreetAddress2)
											@if (Model.StreetAddress2Required)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.StreetAddress2)
								</td>
							</tr>
									}
									@if (Model.ZipPostalCodeEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.ZipPostalCode, new { }, ":")</td>
								<td>
										@Html.EditorFor(model => model.ZipPostalCode)
											@if (Model.ZipPostalCodeRequired)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.ZipPostalCode)
								</td>
							</tr>
									}
									@if (Model.CityEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.City, new { }, ":")</td>
								<td>
										@Html.EditorFor(model => model.City)
											@if (Model.CityRequired)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.City)
								</td>
							</tr>
									}
									@if (Model.CountryEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.CountryId, new { }, ":")</td>
								<td>
										@Html.DropDownList("CountryId", Model.AvailableCountries)
								</td>
							</tr>
									}
									@if (Model.CountryEnabled && Model.StateProvinceEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.StateProvinceId, new { }, ":")</td>
								<td>
										@Html.DropDownList("StateProvinceId", Model.AvailableStates)
											<span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
								</td>
							</tr>
									}
						</table>
					</td>
				</tr>
            </table>
            }
            @if (Model.PhoneEnabled || Model.FaxEnabled)
            {
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.YourContactInformation")</th>
							</tr>
									@if (Model.PhoneEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Phone, new { }, ":")<td>
								<td>
											@Html.EditorFor(model => model.Phone)
											@if (Model.PhoneRequired)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.Phone)
								</td>
							</tr>
									}
									@if (Model.FaxEnabled)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Fax, new { }, ":")</td>
								<td>
											@Html.EditorFor(model => model.Fax)
											@if (Model.FaxRequired)
											{
												@Html.RequiredHint()
											}
											@Html.ValidationMessageFor(model => model.Fax)
								</td>
							</tr>
									}
						</table>
					</td>
				</tr>
            </table>
            }
            @if (Model.NewsletterEnabled)
            {
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.Options")</th>
							</tr>
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Newsletter, new { }, ":")</td>
								<td>
										@Html.EditorFor(model => model.Newsletter)
										@Html.ValidationMessageFor(model => model.Newsletter)
								</td>
							</tr>
						</table>
					</td>
				</tr>
            </table>
            }
            @if (Model.AllowCustomersToSetTimeZone)
            {
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.Preferences")</th>
							</tr>
									@if (Model.AllowCustomersToSetTimeZone)
									{
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.TimeZoneId, new { }, ":")</td>
								<td>
											@Html.DropDownList("TimeZoneId", Model.AvailableTimeZones)
											@Html.ValidationMessageFor(model => model.TimeZoneId)
								</td>
							</tr>
									}
						</table>
					</td>
				</tr>
            </table>
            }
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="form-table">
				<tr>
					<td>
						<table width="100%" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th colspan="2">@T("Account.YourPassword")</th>
							</tr>
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.Password, new { }, ":")</td>
								<td>
									@Html.EditorFor(model => model.Password)
									@Html.RequiredHint()
									@Html.ValidationMessageFor(model => model.Password)
								</td>
							</tr>
							<tr>
								<td class="lbl">@Html.LabelFor(model => model.ConfirmPassword, new { }, ":")</td>
								<td>
									@Html.EditorFor(model => model.ConfirmPassword)
									@Html.RequiredHint()
									@Html.ValidationMessageFor(model => model.ConfirmPassword)
								</td>
							</tr>
								@if (Model.DisplayCaptcha)
								{
							<tr>
								<td class="lbl"><td>
								<td>
										@Html.Raw(Html.GenerateCaptcha())
								</td>
							</tr>
								}
						</table>
					</td>
				</tr>
            </table>
            @if (Model.AcceptPrivacyPolicyEnabled)
            {
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('#register-button').click(function () {
                            if ($('#accept-privacy-policy').is(':checked')) {
                                //do some stuff
                                return true;
                            }
                            else {
                                //just show validation errors, dont post
                                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                return false;
                            }
                        });
                    });
                </script>
                <div class="accept-privacy-policy">
                    <input id="accept-privacy-policy" type="checkbox" name="accept-privacy-policy" />
                    <label for="accept-privacy-policy">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                    <a class="read" href='@Url.RouteUrl("Topic", new { SystemName = "privacyinfo" })'>@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                </div>
            }
            <div class="buttons">
                <input type="submit" id="register" class="button-1 register-next-step-button medium-btn" value="@T("Account.Register.Button")" name="register-button" />
            </div>
        </div>
    </div>
}